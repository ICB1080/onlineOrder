{"version":3,"sources":["logo.svg","utils.js","components/FoodList.js","components/LoginForm.js","components/MyCart.js","components/SignUpForm.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","username","password","loginUrl","fetch","method","headers","credentials","then","response","status","Error","signup","data","body","JSON","stringify","Option","Select","AddToCartButton","itemId","useState","loading","setLoading","title","type","icon","PlusOutlined","onClick","addItemToCart","message","success","catch","err","error","finally","FoodList","foodData","setFoodData","curRest","setCurRest","restaurants","setRestaurants","loadingRest","setLoadingRest","useEffect","json","restId","value","onSelect","placeholder","style","width","map","item","id","name","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","Item","extra","src","imageUrl","alt","height","display","price","LoginForm","state","onFinish","values","setState","props","onSuccess","margin","this","rules","required","prefix","UserOutlined","className","Password","LockOutlined","htmlType","Component","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","visible","footer","justifyContent","strong","totalPrice","toFixed","marginRight","disabled","orderItemList","length","itemLayout","Meta","menuItem","description","SignupForm","displayModal","handleCancel","signupOnClick","render","onCancel","destroyOnClose","preserve","React","Header","Layout","Content","App","authed","setAuthed","Title","level","color","lineHeight","marginBottom","SignUpForm","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ed5f98d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\n\n// login api\nexport const login = credential => {\n    // credential: { username: value, password: value }\n    // request opt: method, url, data\n    const {username, password} = credential;\n    const loginUrl = `/login?username=${username}&password=${password}`;\n    return fetch(loginUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        // when status == 200 log in successfully\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to log in\");\n        }\n    });\n}\n\n// register\nexport const signup = (data) => {\n    const signupUrl = \"/signup\";\n\n    return fetch(signupUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to sign up\");\n        }\n    });\n};\n\n// fetch restaurant menu data\nexport const getMenus = (restId) => {\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to get menus\");\n        }\n\n        return response.json();\n    });\n};\n\n// fetch restaurant data\nexport const getRestaurants = () => {\n    return fetch(\"/restaurants\").then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to get restaurants\");\n        }\n\n        return response.json();\n    });\n};\n\n// fetch cart data from the server\nexport const getCart = () => {\n    return fetch(\"/cart\").then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to get shopping cart data\");\n        }\n\n        return response.json();\n    });\n};\n\n// inform the server to do checkout\nexport const checkout = () => {\n    return fetch(\"/checkout\").then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to checkout\");\n        }\n    });\n};\n\nexport const addItemToCart = (itemId) => {\n    return fetch(`/order/${itemId}`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to add menu item to shopping cart\");\n        }\n    });\n};\n\n\n\n","import { Button, Card, List, message, Select, Tooltip } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { addItemToCart, getMenus, getRestaurants } from \"../utils\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\n\nconst { Option } = Select;\n\n\nconst AddToCartButton = ({ itemId }) => {\n    // loading为false\n    const [loading, setLoading] = useState(false);\n\n    const addToCart = () => {\n        // 1. set loading -> true\n        // 2. add item to the server\n        // 2.1 case1: success\n        //     case2: fail\n        //     finally set loading -> false\n        setLoading(true);\n        addItemToCart(itemId)\n            .then(() => message.success(`You successfully add item!`))\n            .catch((err) => message.error(err.message))\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        // 鼠标移入有气泡提示\n        <Tooltip title=\"Add to shopping cart\">\n            <Button\n                loading={loading}\n                type=\"primary\"\n                // icon\n                icon={<PlusOutlined />}\n                onClick={addToCart}\n            />\n        </Tooltip>\n    );\n};\n\n\n\n\nconst FoodList = () => {\n    const [foodData, setFoodData] = useState([]);\n    const [curRest, setCurRest] = useState();\n    const [restaurants, setRestaurants] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [loadingRest, setLoadingRest] = useState(false);\n\n    // didMount\n    useEffect(() => {\n        // step 1 : set loading status -> true\n        // step 2: fetch restaurant data from the server\n        // step 2.1:\n        // case1: success, setRestaurants\n        // case2: failed\n        // finally -> set loading status -> false\n        setLoadingRest(true);\n        getRestaurants()\n            .then((data) => {\n                setRestaurants(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setLoadingRest(false);\n            });\n    }, []);\n\n\n    // didUpdate -> update selected restaurant\n    useEffect(() => {\n        // step1: set loading status -> true\n        // step2: get menu from the server\n        // step2.1:\n        //      case1: success, setFoodDate\n        //      case2: failed\n        //      finally: set loading status -> false\n        if (curRest) {\n            setLoading(true);\n            // 把restaurant id传进来才能getMenu\n            getMenus(curRest)\n                .then((data) => {\n                    setFoodData(data);\n                })\n                .catch((err) => {\n                    message.error(err.message);\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        }\n    }, [curRest]);\n\n    return (\n        <>\n            {/*选餐厅*/}\n            <Select\n                value={curRest}\n                onSelect={(value) => setCurRest(value)}\n                placeholder=\"Select a restaurant\"\n                loading={loadingRest}\n                style={{ width: 300 }}\n            >\n                {restaurants.map((item) => {\n                    return <Option value={item.id}>{item.name}</Option>;\n                })}\n            </Select>\n            {/*选择后有菜单*/}\n            {curRest && (\n                <List\n                    style={{ marginTop: 20 }}\n                    loading={loading}\n                    // 用来作分隔\n                    grid={{\n                        gutter: 16,\n                        //xs-xxl页面从小到大，数字表示一行显示几个item\n                        xs: 1,\n                        sm: 2,\n                        md: 4,\n                        lg: 4,\n                        xl: 3,\n                        xxl: 3,\n                    }}\n                    dataSource={foodData}\n                    renderItem={(item) => (\n                        // list里面有很多card，也就是某个餐厅具体的食物列表\n                        <List.Item>\n                            <Card\n                                title={item.name}\n\n                                extra={<AddToCartButton itemId={item.id} />}\n                            >\n                                <img\n                                    src={item.imageUrl}\n                                    // 如果图片不存在就用名字\n                                    alt={item.name}\n                                    style={{ height: 'auto', width: \"100%\", display: \"block\" }}\n                                />\n                                {`Price: ${item.price}`}\n                            </Card>\n                        </List.Item>\n                    )}\n                />\n            )}\n        </>\n    );\n};\n\nexport default FoodList;\n\n\n","import React, {Component} from 'react';\nimport { Form, Input, Button, message} from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport {login} from '../utils'\nclass LoginForm extends Component {\n    state = {\n        loading: false,\n    };\n\n    onFinish = (values) => {\n        // set button loading\n        this.setState({loading: true})\n        login(values)\n            .then(() => {\n                // login successfully\n                // inform users\n                // inform parent component app logged in\n                message.success(`Login Successful`);\n                // 子向父的数据传递\n                this.props.onSuccess();\n            })\n            .catch((err) => {\n                // login failed\n                // inform users\n                // err什么message这里就什么message\n                message.error(err.message);\n            })\n            .finally(() => {\n                // do whatever\n                // set button not loading\n                this.setState({\n                    loading: false,\n                });\n            })\n    };\n\n    render() {\n        return (\n\n\n            <Form\n                name=\"normal_login\"\n                style={{\n                    width: 300,\n                    margin: \"auto\",\n                }}\n                onFinish={this.onFinish}\n            >\n                <Form.Item\n                    name=\"username\"\n                    rules={[{ required: true, message: 'Please input your Username!' }]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[{ required: true, message: 'Please input your Password!' }]}\n                >\n                    <Input.Password\n                        prefix={<LockOutlined />}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    {/*htmlType在button点击后触发onfinish事件*/}\n                    <Button type=\"primary\" htmlType=\"submit\" loading = {this.state.loading}>\n                        Log in\n                    </Button>\n                </Form.Item>\n            </Form>\n\n        );\n    }\n}\n\nexport default LoginForm;","import React from 'react';\n\nimport { Button, Drawer, List, message, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { checkout, getCart } from \"../utils\";\n\nconst { Text } = Typography;\n\nconst MyCart = () => {\n    const [cartVisible, setCartVisible] = useState(false);\n    const [cartData, setCartData] = useState();\n    const [loading, setLoading] = useState(false);\n    const [checking, setChecking] = useState(false);\n\n\n    // 每次显示购物车都要去后端获取数据\n    // 1. cart is not visible -> return\n    // 2. cart is visible\n    // 2.1 set loading -> true\n    // 2.2 fetch cart data\n    // 2.2.1 success -> setCartData(data from the server)\n    // 2.2.2 fail -> inform user\n    // set loading -> false\n    useEffect(() => {\n        if (!cartVisible) {\n            return;\n        }\n\n        setLoading(true);\n        getCart()\n            .then((data) => {\n                setCartData(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [cartVisible]);\n\n    const onCheckOut = () => {\n        setChecking(true);\n        checkout()\n            .then(() => {\n                message.success(\"You successfully checkout!\");\n                setCartVisible(false);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setChecking(false);\n            });\n    };\n\n    const onCloseDrawer = () => {\n        setCartVisible(false);\n    };\n\n    const onOpenDrawer = () => {\n        setCartVisible(true);\n    };\n\n    return (\n        <>\n            <Button type=\"primary\" shape=\"round\" onClick={onOpenDrawer}>\n                Cart\n            </Button>\n            <Drawer\n                title=\"My Shopping Cart\"\n                onClose={onCloseDrawer}\n                visible={cartVisible}\n                width={520}\n                // 底部button\n                footer={\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                        }}\n                    >\n                        <Text strong={true}>{`Total price: $${cartData ?.totalPrice.toFixed(2)}`}</Text>\n                        <div>\n                            <Button onClick={onCloseDrawer} style={{ marginRight: 8 }}>\n                                Cancel\n                            </Button>\n                            <Button\n                                onClick={onCheckOut}\n                                type=\"primary\"\n                                loading={checking}\n                                // cartData为空时和loading时 把checkout设为disabled\n                                disabled={loading || cartData?.orderItemList.length === 0}\n                            >\n                                Checkout\n                            </Button>\n                        </div>\n                    </div>\n                }\n            >\n                <List\n                    loading={loading}\n                    itemLayout=\"horizontal\"\n                    dataSource={cartData? cartData.orderItemList : []}\n                    renderItem={(item) => (\n                        <List.Item>\n                            <List.Item.Meta\n                                title={item.menuItem.name}\n                                description={`$${item.price}`}\n                            />\n                        </List.Item>\n                    )}\n                />\n            </Drawer>\n        </>\n    );\n};\n\nexport default MyCart;","import { Button, Form, Input, message, Modal } from \"antd\";\nimport React from \"react\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { signup } from \"../utils\";\n\nclass SignupForm extends React.Component {\n    // 用来显示modal\n    state = {\n        displayModal: false,\n    };\n\n\n    handleCancel = () => {\n        this.setState({\n            displayModal: false,\n        });\n    };\n\n    signupOnClick = () => {\n        this.setState({\n            displayModal: true,\n        });\n    };\n\n    onFinish = (data) => {\n        // inform server to register\n        signup(data)\n            .then(() => {\n                this.setState({\n                    displayModal: false,\n                });\n                message.success(`You have successfully signed up!`);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            });\n    };\n\n    render = () => {\n        return (\n            <>\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\n                    Register\n                </Button>\n                <Modal\n                    title=\"Register\"\n                    visible={this.state.displayModal}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                    destroyOnClose={true}\n                >\n                    <Form\n                        name=\"normal_register\"\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"email\"\n                            rules={[{ required: true, message: \"Please input your email!\" }]}\n                        >\n                            <Input prefix={<UserOutlined />} placeholder=\"Email\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[\n                                { required: true, message: \"Please input your password!\" },\n                            ]}\n                        >\n                            <Input prefix={<LockOutlined />} placeholder=\"Password\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"firstName\"\n                            rules={[\n                                { required: true, message: \"Please input your first name!\" },\n                            ]}\n                        >\n                            <Input placeholder=\"firstname\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"lastName\"\n                            rules={[\n                                { required: true, message: \"Please input your last name!\" },\n                            ]}\n                        >\n                            <Input placeholder=\"lastname\" />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Register\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n        );\n    };\n}\n\nexport default SignupForm;\n","import logo from './logo.svg';\nimport './App.css';\nimport {Layout, Typography} from \"antd\";\nimport FoodList from \"./components/FoodList\";\nimport LoginForm from \"./components/LoginForm\";\nimport React, {useState} from 'react'\nimport MyCart from \"./components/MyCart\";\nimport SignUpForm from \"./components/SignUpForm\";\nconst { Header, Content} = Layout;\nfunction App() {\n    // 创建authed和修改authed的方法\n    const [authed, setAuthed] = useState(false);\n    const { Title } = Typography;\n\n\n\n    return (\n      <Layout style={{height : \"100\"}}>\n        <Header>\n            <div className=\"header\">\n          <Title\n              level={2}\n              style={{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0 }}\n          >Doordash Food\n          </Title>\n\n                <div>\n                    { authed\n                        ?\n                        <MyCart />\n                        :\n                        <SignUpForm />\n                    }\n                </div>\n\n\n            </div>\n        </Header>\n        <Content style = {{\n          padding:\"50px\",\n          // 100%指整个页面\n          maxHeight: \"calc(100% - 64px)\",\n          overflowY:\"auto\"\n        }}>\n            {\n                authed ?\n                    <FoodList />:\n                    <LoginForm onSuccess={() => setAuthed(true)} />\n            }\n        </Content>\n      </Layout>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}